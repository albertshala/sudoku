'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _jsx = function () { var REACT_ELEMENT_TYPE = typeof Symbol === "function" && Symbol.for && Symbol.for("react.element") || 0xeac7; return function createRawReactElement(type, props, key, children) { var defaultProps = type && type.defaultProps; var childrenLength = arguments.length - 3; if (!props && childrenLength !== 0) { props = {}; } if (props && defaultProps) { for (var propName in defaultProps) { if (props[propName] === void 0) { props[propName] = defaultProps[propName]; } } } else if (!props) { props = defaultProps || {}; } if (childrenLength === 1) { props.children = children; } else if (childrenLength > 1) { var childArray = Array(childrenLength); for (var i = 0; i < childrenLength; i++) { childArray[i] = arguments[i + 3]; } props.children = childArray; } return { $$typeof: REACT_ELEMENT_TYPE, type: type, key: key === undefined ? null : '' + key, ref: null, props: props, _owner: null }; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = TableSortableHeaderCell;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _styles = require('../styles');

var _IconArrowDropdownDown = require('../Icon/IconArrowDropdownDown');

var _IconArrowDropdownDown2 = _interopRequireDefault(_IconArrowDropdownDown);

var _IconArrowDropdownUp = require('../Icon/IconArrowDropdownUp');

var _IconArrowDropdownUp2 = _interopRequireDefault(_IconArrowDropdownUp);

var _TableHeaderCell = require('./TableHeaderCell');

var _TableHeaderCell2 = _interopRequireDefault(_TableHeaderCell);

var _Sortable = require('./Sortable');

var _Table = require('./Table');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var componentTheme = function componentTheme(baseTheme) {
  return _extends({
    TableHeaderCell_border_focus: '1px solid ' + baseTheme.borderColor_theme_focus,
    TableHeaderCell_color_focus: baseTheme.color_theme

  }, baseTheme);
};

var focusStyles = function focusStyles(theme) {
  return {
    color: theme.TableHeaderCell_color_focus,
    outline: theme.TableHeaderCell_border_focus,
    outlineOffset: '-' + theme.TableHeaderCell_border_focus.split(' ')[0]
  };
};

// [1] Extends the clickable area of the Button to fill the entire cell
var styles = {
  root: function root(_ref) {
    var baseTheme = _ref.theme;

    var theme = componentTheme(baseTheme);

    return {
      overflow: 'hidden', // [1]

      '&:hover': {
        color: theme.icon_color_theme
      },

      '&:focus-within': focusStyles(theme)
    };
  },
  button: function button(_ref2) {
    var baseTheme = _ref2.theme;

    var theme = componentTheme(baseTheme);

    return {
      background: 'none',
      border: 0,
      color: 'inherit',
      cursor: 'pointer',
      fontSize: 'inherit',
      fontWeight: 'inherit',
      position: 'relative',
      verticalAlign: theme.TableHeaderCell_verticalAlign,
      whiteSpace: 'nowrap',
      width: '100%',

      '&:focus': focusStyles(theme),

      '*:focus-within > &:focus': {
        outline: 0
      },

      '&::-moz-focus-inner': {
        border: 0
      },

      // [1]
      '&::after': {
        bottom: '100%',
        content: '""',
        height: '10em',
        left: 0,
        position: 'absolute',
        right: 0
      }
    };
  },
  content: {
    position: 'relative',
    whiteSpace: 'normal'
  },
  iconHolder: function iconHolder(_ref3) {
    var isActiveSort = _ref3.isActiveSort,
        direction = _ref3.direction,
        theme = _ref3.theme;

    var iconAdjustment = (0, _styles.pxToEm)(2);
    var space = parseFloat(theme.space_inline_xxs) + parseFloat(iconAdjustment) + 'em';

    return {
      color: theme.icon_color,
      display: 'inline-block',
      height: '0.875em',
      marginLeft: theme.direction === 'ltr' ? space : null,
      marginRight: theme.direction === 'rtl' ? space : null,
      opacity: isActiveSort ? null : 0,
      position: 'relative',
      top: direction === 'ascending' ? 2 : 1,
      width: '0.875em',

      '& > [role="img"]': {
        margin: '-' + iconAdjustment
      },

      '*:hover > button > &, button:focus > &': {
        color: 'inherit'
      }
    };
  }
};

var Root = (0, _styles.createStyledComponent)(_TableHeaderCell2.default, styles.root, {
  displayName: 'TableSortableHeaderCell',
  withProps: { noPadding: true }
});
var Button = (0, _styles.createStyledComponent)(_TableHeaderCell2.default, styles.button, {
  withProps: { element: 'button' }
});
var Content = (0, _styles.createStyledComponent)('span', styles.content);
var IconHolder = (0, _styles.createStyledComponent)('span', styles.iconHolder);

var iconProps = {
  'aria-hidden': true,
  size: 'auto'
};
var sortIcon = {
  ascending: _react2.default.createElement(_IconArrowDropdownUp2.default, iconProps),
  descending: _react2.default.createElement(_IconArrowDropdownDown2.default, iconProps)
};

function TableSortableHeaderCell(_ref4) {
  var children = _ref4.children,
      label = _ref4.label,
      name = _ref4.name,
      messages = _ref4.messages,
      sortable = _ref4.sortable,
      restProps = _objectWithoutProperties(_ref4, ['children', 'label', 'name', 'messages', 'sortable']);

  var sort = sortable.sort,
      sortFn = sortable.sortFn;


  var sortColumn = sort && sort.key;
  var descending = sort ? sort.descending : false;

  var isActiveSort = sortColumn === name;
  var activeDirection = descending ? 'descending' : 'ascending';
  var nextDirection = isActiveSort && activeDirection === 'ascending' ? 'descending' : 'ascending';

  var toggle = isActiveSort || activeDirection !== nextDirection;
  var nextDescending = toggle ? !descending : descending;

  var a11yLabel = label || children;

  var rootProps = _extends({}, restProps, {
    'aria-label': a11yLabel,
    'aria-sort': isActiveSort ? activeDirection : 'none',
    role: 'columnheader'
  });

  var buttonProps = _extends({}, restProps, {
    'aria-label': nextDirection === 'ascending' ? messages.sortColumnAscending : messages.sortColumnDescending,
    onClick: function onClick() {
      sortFn({ key: name, descending: nextDescending });
    }
  });
  var iconHolderProps = {
    direction: isActiveSort && activeDirection || 'ascending',
    isActiveSort: isActiveSort
  };

  return _react2.default.createElement(
    Root,
    rootProps,
    _react2.default.createElement(
      Button,
      buttonProps,
      _jsx(Content, {}, void 0, children),
      '\xA0',
      _react2.default.createElement(
        IconHolder,
        iconHolderProps,
        sortIcon[iconHolderProps.direction]
      )
    )
  );
}